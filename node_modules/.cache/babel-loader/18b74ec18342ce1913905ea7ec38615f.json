{"ast":null,"code":"import _slicedToArray from \"C:/Neog camp projects for level0/Emoji-translator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Neog camp projects for level0\\\\Emoji-translator\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  var _this = this;\n\n  var emojiYouKnow = {\n    \"ðŸ¥º\": \"Pleading Face\",\n    \"ðŸ¥°\": \"Smiling Face with Hearts\",\n    \"ðŸ™ƒ\": \"Upside-down face\",\n    \"ðŸ˜Š\": \"Smiling Face with Smiling Eyes\",\n    \"ðŸ˜€\": \"Grinning Face\",\n    \"ðŸ˜†\": \"Grinning Squinting Face\",\n    \"ðŸ˜œ\": \"Winking Face with Tongue\",\n    \"ðŸ¤—\": \" Smiling Face with Open Hands\",\n    \"ðŸ¤”\": \" Thinking Face\",\n    \"ðŸ¤«\": \"Shushing Face\",\n    \"ðŸ˜¯\": \"Hushed Face\",\n    \"ðŸ¤ª\": \"Zany Face\",\n    \"ðŸ˜…\": \"Grinning Face with Sweat\",\n    \"ðŸ”¥\": \"Fire\",\n    \"ðŸ’€\": \"Skull\",\n    \"âœ¨\": \"Sparkles\"\n  };\n  var emojiArray = Object.keys(emojiYouKnow);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      meaning = _useState2[0],\n      setmeaning = _useState2[1];\n\n  function inputEventHandler(e) {\n    var emoji = e.target.value;\n    emoji = emoji.trim(\" \"); //remove extra space added in emoji\n\n    var currentMeaning = emojiYouKnow[emoji];\n\n    if (currentMeaning === undefined) {\n      currentMeaning = \"we do not have thi in our database\";\n    }\n\n    setmeaning(currentMeaning);\n  }\n\n  function emojoClickEventHandler(emoji) {\n    setmeaning(emojiYouKnow[emoji]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Choose Your Favourite emoji\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"spantext\",\n        children: \"and know its meaning...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"brown\"\n      },\n      children: \"Enter an emoji below and get its meaning \\uD83D\\uDC47\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: inputEventHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"meaning\",\n      children: meaning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"50%\",\n        margin: \"auto\"\n      },\n      children: emojiArray.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: function onClick() {\n            return emojoClickEventHandler(item);\n          },\n          style: {\n            marginLeft: \"0.7rem\",\n            fontSize: \"2rem\",\n            cursor: \"pointer\"\n          },\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nn6bz3A0GZmaxZY6aiA9Iv0khj0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","emojiYouKnow","emojiArray","Object","keys","meaning","setmeaning","inputEventHandler","e","emoji","target","value","trim","currentMeaning","undefined","emojoClickEventHandler","color","maxWidth","margin","map","item","marginLeft","fontSize","cursor"],"sources":["C:/Neog camp projects for level0/Emoji-translator/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  var emojiYouKnow = {\n    \"ðŸ¥º\": \"Pleading Face\",\n    \"ðŸ¥°\": \"Smiling Face with Hearts\",\n    \"ðŸ™ƒ\": \"Upside-down face\",\n    \"ðŸ˜Š\": \"Smiling Face with Smiling Eyes\",\n    \"ðŸ˜€\": \"Grinning Face\",\n    \"ðŸ˜†\": \"Grinning Squinting Face\",\n    \"ðŸ˜œ\": \"Winking Face with Tongue\",\n    \"ðŸ¤—\": \" Smiling Face with Open Hands\",\n    \"ðŸ¤”\": \" Thinking Face\",\n    \"ðŸ¤«\": \"Shushing Face\",\n    \"ðŸ˜¯\": \"Hushed Face\",\n    \"ðŸ¤ª\": \"Zany Face\",\n    \"ðŸ˜…\": \"Grinning Face with Sweat\",\n    \"ðŸ”¥\": \"Fire\",\n    \"ðŸ’€\": \"Skull\",\n    \"âœ¨\": \"Sparkles\"\n  };\n  var emojiArray = Object.keys(emojiYouKnow);\n  var [meaning, setmeaning] = useState(\"\");\n\n  function inputEventHandler(e) {\n    let emoji = e.target.value;\n    emoji = emoji.trim(\" \"); //remove extra space added in emoji\n    var currentMeaning = emojiYouKnow[emoji];\n    if (currentMeaning === undefined) {\n      currentMeaning = \"we do not have thi in our database\";\n    }\n    setmeaning(currentMeaning);\n  }\n\n  function emojoClickEventHandler(emoji) {\n    setmeaning(emojiYouKnow[emoji]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h3>\n        Choose Your Favourite emoji{\" \"}\n        <span id=\"spantext\">and know its meaning...</span>\n      </h3>\n      <h3 style={{ color: \"brown\" }}>\n        Enter an emoji below and get its meaning ðŸ‘‡\n      </h3>\n      <input onChange={inputEventHandler}></input>\n      <p id=\"meaning\">{meaning}</p>\n      <div\n        style={{\n          maxWidth: \"50%\",\n          margin: \"auto\"\n        }}\n      >\n        {emojiArray.map((item) => {\n          return (\n            <span\n              key={item}\n              onClick={() => emojoClickEventHandler(item)}\n              style={{\n                marginLeft: \"0.7rem\",\n                fontSize: \"2rem\",\n                cursor: \"pointer\"\n              }}\n            >\n              {item}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAAA;;EAC5B,IAAIC,YAAY,GAAG;IACjB,MAAM,eADW;IAEjB,MAAM,0BAFW;IAGjB,MAAM,kBAHW;IAIjB,MAAM,gCAJW;IAKjB,MAAM,eALW;IAMjB,MAAM,yBANW;IAOjB,MAAM,0BAPW;IAQjB,MAAM,+BARW;IASjB,MAAM,gBATW;IAUjB,MAAM,eAVW;IAWjB,MAAM,aAXW;IAYjB,MAAM,WAZW;IAajB,MAAM,0BAbW;IAcjB,MAAM,MAdW;IAejB,MAAM,OAfW;IAgBjB,KAAK;EAhBY,CAAnB;EAkBA,IAAIC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,CAAjB;;EACA,gBAA4BF,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAKM,OAAL;EAAA,IAAcC,UAAd;;EAEA,SAASC,iBAAT,CAA2BC,CAA3B,EAA8B;IAC5B,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAArB;IACAF,KAAK,GAAGA,KAAK,CAACG,IAAN,CAAW,GAAX,CAAR,CAF4B,CAEH;;IACzB,IAAIC,cAAc,GAAGZ,YAAY,CAACQ,KAAD,CAAjC;;IACA,IAAII,cAAc,KAAKC,SAAvB,EAAkC;MAChCD,cAAc,GAAG,oCAAjB;IACD;;IACDP,UAAU,CAACO,cAAD,CAAV;EACD;;EAED,SAASE,sBAAT,CAAgCN,KAAhC,EAAuC;IACrCH,UAAU,CAACL,YAAY,CAACQ,KAAD,CAAb,CAAV;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,0CAC8B,GAD9B,eAEE;QAAM,EAAE,EAAC,UAAT;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAI,KAAK,EAAE;QAAEO,KAAK,EAAE;MAAT,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAQE;MAAO,QAAQ,EAAET;IAAjB;MAAA;MAAA;MAAA;IAAA,QARF,eASE;MAAG,EAAE,EAAC,SAAN;MAAA,UAAiBF;IAAjB;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MACE,KAAK,EAAE;QACLY,QAAQ,EAAE,KADL;QAELC,MAAM,EAAE;MAFH,CADT;MAAA,UAMGhB,UAAU,CAACiB,GAAX,CAAe,UAACC,IAAD,EAAU;QACxB,oBACE;UAEE,OAAO,EAAE;YAAA,OAAML,sBAAsB,CAACK,IAAD,CAA5B;UAAA,CAFX;UAGE,KAAK,EAAE;YACLC,UAAU,EAAE,QADP;YAELC,QAAQ,EAAE,MAFL;YAGLC,MAAM,EAAE;UAHH,CAHT;UAAA,UASGH;QATH,GACOA,IADP;UAAA;UAAA;UAAA;QAAA,SADF;MAaD,CAdA;IANH;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GAvEuBpB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}